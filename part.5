### 지금 현재 날짜, 시간 출력하기
- select now(); *실행결과* : 2021-12-21 8:47:56
- select sysdate(); *실행결과* : 2021-12-21 8:48:13
- select current_timestamp(); *실행결과* : 2021-12-21 8:48:49
- select curdate(); *실행결과* : 2021-12-21
- select current_date(); *실행결과* : 2021-12-21
- select current_time(); *실행결과* : 8:50:12
- select now()+0; *실행결과* : 20211221085123
- select current_time()+0; *실행결과* : 085239

- '+0'이라는 연산을 추가하면 날짜나 시간을 다른 형식에 맞게 출력하지 않고 숫자를 나열한 형태로 출력할 수 있다
- 이때 출력되는 문자열은 숫자 형태로 출력이 되게 된다


### 날짜, 시간에 따른 특정 정보 출력하기
- select dayofweek('2021-12-21 09:01:23');  *실행결과* : 3
  - 1:일요일, 2:월요일, 3:화요일 ...7:토요일
  
- select weekday('2021-12-21 09:02:12');  *실행결과* : 1
  - 0:월요일, 1:화요일, 2:수요일 ... 6:일요일
  
- select dayofmonth('2021-12-21 09:04:33'); *실행결과* : 21 
  - 일자(21일)를 출력
  
- select dayofyear('2021-12-21 09:05:45'); 
  - 한해의 몇번째 날인지 출력

- select month('2021-12-21 09:06:34'); *실행결과* : 12
  - 월을 출력
  
- select dayname('2021-12-21 09:07:11'); *실행결과* : Tuesday
  - 요일을 영문으로 출력

- select monthname('2021-12-21 09:08:01'); *실행결과* : December
  - 월을 영문으로 출력

- select quarter('2021-12-21 09:09:04'); 
  - 분기를 출력(1분기~4분기)
  
- select week('2021-12-21 09:09:45');
  - 한해의 몇번째 주인지 출력
  
- select year('2021-12-21 09:10:34');
  - 년도를 출력
  
- select hour('2021-12-21 09:10:45');
  - 시간을 출력
  
- select minute('2021-12-21 09:11:32');
  - 분을 출력
  

### 날짜, 시간을 연산하여 출력하기
- 날짜 및 시간을 연산한다는 것은 특정 날짜에서 며칠 뒤, 혹은 전을 출력하길 원하거나 시간, 분, 초를 더하거나 빼서 출력하는 것을 말한다
(사용법)
date_add(date, interval expr type)
date_sub(date, interval expr type)
adddate(date, interval expr type)
subdate(date, interval expr type)

<type사용 방법>
   type 변수 값          의미          type에 따른 expr 입력 형태
second              seconds                    초
minute              minutes                    분
hour                hours                      시
day                 days                       일
month               months                     월
year                years                      년
minute_second       minutes:seconds            분:초
hour_minute         hours:minutes              시:분
day_hour            days hours                 일 시
year_month          years months               년 월
hour_second         hours:minutes:seconds      시:분:초
day_minute          days hours:minutes         일 시:분
day_second          days hours:minutes:seconds 일 시:분:초

<에문 소개>
select date_add('2021-12-21 09:18:32', interval 1 second);
- 주어진 일시에 1초를 더하여 출력한다
*실행결과*
2021-12-21 09:18:33

select date_add('2021-12-31 23:59:59', interval 31 day);
- 주어진 일시에 31일을 더하여 출력한다
*실행결과*
2022-01-31 23:59:59

select date_add('2021-12-31 23:59:59', interval '1:1' minute_second);
- 주어진 일시에 1분, 1초를 더하여 출력한다
*실행결과*
2022-01-01 00:01:00

select date_add('2021-12-31 23:59:59', interval '-1 17' day_hour);
- 주어진 일시에 하루와, 17시간을 빼서 출력한다
*실행결과*
2021-12-30 06:59:59


### 시간과 초 데이터 변환하여 출력하기
select sec_to_time(3000);
- 시간과 초 값을 서로 변환해 주는 함수
- 3000초를 sec_to_time 함수를 이용하여 시간으로 환산하여 출력

select time_to_sec('20:21:30');
- 20시간 21분 30초를 time_to_sec 함수를 이용하여 초로 환산하여 출력


### periot_add, period_diff를 이용하여 원하는 값 출력하기
- period_add는 입력된 년월 데이터에 원하는 만큼의 개월을 더한 값을 'YYYYMM'형태로 출력하는 함수

ex)
#입력값을 YYMM으로 준 경우
select period_add(2001,15);
#입력값을 YYYYMM으로 준 경우
select period_add(202001, 15);

*실행결과*
202104


### date_format 함수 사용하여 출력하기
- date_format 함수는 mysql 혹은 mariadb에서 매우 많이 사용되는 날짜 함수는 하나이다
- 위에서 소개한 날짜 관련 함수들과 겹치는 기능이 있다
- 하지만 간단한 파라미터 조정으로 원하는 데이터를 원하는 형태로 쉽게 변경하여 출력할 수 있다는 장점이 있다
(사용법)
select date_format('date', 'format');

format 변수            설명
%W                요일(Monday...Sunday)
%D                일자(1st,2nd...)
%Y                년도(YYYY)
%y                년도(YY)
%a                요일 영문 약어 (Sun,Mon..)
%d                일자(01..02..31)
%e                일자(1..2..31)
%m                월(01..02..12)
%c                월(1..2..12)
%b                월(Jan...Dec)
%j                해당년에서 몇번째 날인지 (1...366)
%H                시(00..01..02..23)
%k                시(0..1..2..23)
%h                시(01..02..12)
%L                시(1..2..12)
%l                시(01..02..12)
%i                분(01..02..59)
%r                시각(12) (hh:mm:ss [A/P])
%T                시각(24) (hh:mm:ss)
%S,s              초 (00..01..59)
%p                오전/오후 (A/P)
%w                해당 요일 중 몇번째 날인지 (0:일요일, 1:월요일...6:토요일)
%U,u              해당년엣 몇번째 주 인지 (U:일요일이 주의 시작, u:월요일이 주의 시작)

ex)
select date_format('2020-01-01 16:59:09'. '%p');
*실행결과*
PM

select date_format('2020-01-01 16:59:09', '%w');
*실행결과*
3







